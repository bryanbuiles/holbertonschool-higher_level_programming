
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix = [['b', 'r', 'y'], ['a', 'n', 6]]
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


>>> matrix = [[1, 2, 3], [4, 5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix = [[1, 2, -5], [4, 5, -8]]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, -2.5], [2.0, 2.5, -4.0]]


>>> matrix = [[]]
>>> print(matrix_divided(matrix, 2))
[[]]

>>> matrix = [[1, 2, -5], [4, 5, -8]]
>>> print(matrix_divided(matrix,))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[1.33, 2.143, 3.1], [4, 5.0, 6.5]]
>>> print(matrix_divided(matrix, 3))
[[0.44, 0.71, 1.03], [1.33, 1.67, 2.17]]

>>> matrix = True
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[True, 2.143, 3.1], [4, 5.0, 6.5]]
>>> print(matrix_divided(matrix, 1))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
